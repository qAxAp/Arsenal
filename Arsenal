-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = game:GetService("Workspace").CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- Variables
local aimbotEnabled = false
local espEnabled = false
local tracerEnabled = false
local maxLockOnDistance = 200
local maxLockOnAngle = 180
local fireCooldown = 0.1
local lastFireTime = 0
local espBoxes = {}
local tracers = {}
local isMinimized = false

-- Create UI
local function createMainUI()
    local playerGui = LocalPlayer:WaitForChild("PlayerGui")

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "AimbotUI"
    screenGui.Parent = playerGui

    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 300, 0, 160)  -- Increased width and height for the frame
    mainFrame.Position = UDim2.new(0, 10, 0, 10)
    mainFrame.BackgroundColor3 = Color3.fromRGB(64, 224, 208)  -- Turquoise color
    mainFrame.BorderSizePixel = 0
    mainFrame.Active = true  -- Enable dragging
    mainFrame.Draggable = true  -- Make the frame draggable
    mainFrame.Parent = screenGui

    local function createButton(name, posY, toggleFunc)
        local button = Instance.new("TextButton")
        button.Name = name
        button.Size = UDim2.new(0, 250, 0, 30)  -- Buttons are narrower than the main frame
        button.Position = UDim2.new(0.5, -125, 0, posY)  -- Center the button horizontally
        button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)  -- White color
        button.TextColor3 = Color3.fromRGB(0, 0, 0)  -- Black text color for contrast
        button.Text = name
        button.Font = Enum.Font.SourceSansBold
        button.TextSize = 24
        button.Parent = mainFrame

        button.MouseButton1Click:Connect(function()
            toggleFunc(button)
        end)
    end

    local function toggleAimbot(button)
        aimbotEnabled = not aimbotEnabled
        button.TextColor3 = aimbotEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(0, 0, 0)  -- Green for enabled, Black for disabled
        print("Aimbot " .. (aimbotEnabled and "Enabled" or "Disabled"))
    end

    local function toggleESP(button)
        espEnabled = not espEnabled
        button.TextColor3 = espEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(0, 0, 0)  -- Green for enabled, Black for disabled
        print("ESP " .. (espEnabled and "Enabled" or "Disabled"))

        -- Remove all ESP boxes if ESP is disabled
        for _, box in pairs(espBoxes) do
            if box then
                box:Destroy()
            end
        end
        espBoxes = {}
    end

    local function toggleTracer(button)
        tracerEnabled = not tracerEnabled
        button.TextColor3 = tracerEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(0, 0, 0)  -- Green for enabled, Black for disabled
        print("Tracer " .. (tracerEnabled and "Enabled" or "Disabled"))

        -- Remove all tracers if Tracer is disabled
        for _, tracer in pairs(tracers) do
            if tracer then
                tracer:Remove()
            end
        end
        tracers = {}
    end

    createButton("Aimbot", 40, toggleAimbot)
    createButton("ESP", 80, toggleESP)
    createButton("Tracer", 120, toggleTracer)

    local minimizeButton = Instance.new("TextButton")
    minimizeButton.Name = "MinimizeButton"
    minimizeButton.Size = UDim2.new(0, 30, 0, 30)
    minimizeButton.Position = UDim2.new(1, -70, 0, 0)
    minimizeButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)  -- White color
    minimizeButton.TextColor3 = Color3.fromRGB(0, 0, 0)  -- Black text color for contrast
    minimizeButton.Text = "_"
    minimizeButton.Font = Enum.Font.SourceSansBold
    minimizeButton.TextSize = 24
    minimizeButton.Parent = mainFrame

    minimizeButton.MouseButton1Click:Connect(function()
        isMinimized = not isMinimized
        for _, child in pairs(mainFrame:GetChildren()) do
            if child:IsA("TextButton") and child.Name ~= "MinimizeButton" and child.Name ~= "DestroyButton" then
                child.Visible = not isMinimized
            end
        end
        mainFrame.Size = isMinimized and UDim2.new(0, 300, 0, 40) or UDim2.new(0, 300, 0, 160)
    end)

    local destroyButton = Instance.new("TextButton")
    destroyButton.Name = "DestroyButton"
    destroyButton.Size = UDim2.new(0, 30, 0, 30)
    destroyButton.Position = UDim2.new(1, -35, 0, 0)
    destroyButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)  -- Red color for the destroy button
    destroyButton.TextColor3 = Color3.fromRGB(255, 255, 255)  -- White text color
    destroyButton.Text = "X"
    destroyButton.Font = Enum.Font.SourceSansBold
    destroyButton.TextSize = 24
    destroyButton.Parent = mainFrame

    destroyButton.MouseButton1Click:Connect(function()
        screenGui:Destroy()
    end)
end

-- ESP Box Function
local function createESP(player)
    if not espEnabled or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return
    end

    local humanoidRootPart = player.Character.HumanoidRootPart
    local espBox = Instance.new("BoxHandleAdornment")
    espBox.Size = Vector3.new(5, 5, 5)  -- Set width, height, and depth to 5 units
    espBox.Adornee = humanoidRootPart
    espBox.AlwaysOnTop = true
    espBox.ZIndex = 10
    espBox.Color3 = Color3.fromRGB(255, 0, 0)
    espBox.Transparency = 0.5
    espBox.Parent = humanoidRootPart

    espBoxes[player] = espBox
    print("Created ESP for:", player.Name)
end

local function removeESP(player)
    if espBoxes[player] then
        espBoxes[player]:Destroy()
        espBoxes[player] = nil
        print("Removed ESP for:", player.Name)
    end
end

-- Tracer Code
local function createTracer(player)
    if not tracerEnabled or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return
    end

    local tracer = Drawing.new("Line")
    tracer.Color = Color3.fromRGB(255, 0, 0)
    tracer.Thickness = 2
    tracer.Transparency = 1
    tracer.Visible = true

    tracers[player] = tracer
    print("Created tracer for:", player.Name)
end

local function updateTracer(player)
    if tracers[player] and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local screenPoint = Camera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)
        local from = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
        local to = Vector2.new(screenPoint.X, screenPoint.Y)

        tracers[player].From = from
        tracers[player].To = to
    end
end

local function removeTracer(player)
    if tracers[player] then
        tracers[player]:Remove()
        tracers[player] = nil
        print("Removed tracer for:", player.Name)
    end
end

-- Aimbot Code
local function getClosestPlayerToCrosshair()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Team ~= LocalPlayer.Team and player.Character and player.Character:FindFirstChild("Head") then
            local head = player.Character.Head
            local screenPoint = Camera:WorldToViewportPoint(head.Position)
            local distanceToCrosshair = (Vector2.new(screenPoint.X, screenPoint.Y) - Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)).Magnitude
            local distanceToPlayer = (LocalPlayer.Character.Head.Position - head.Position).Magnitude

            local directionToPlayer = (head.Position - Camera.CFrame.Position).Unit
            local cameraDirection = Camera.CFrame.LookVector
            local angle = math.deg(math.acos(cameraDirection:Dot(directionToPlayer)))

            local ray = Ray.new(Camera.CFrame.Position, directionToPlayer * distanceToPlayer)
            local hit, _ = workspace:FindPartOnRayWithIgnoreList(ray, {LocalPlayer.Character, player.Character})

            if distanceToCrosshair < shortestDistance and distanceToCrosshair < 500 and distanceToPlayer <= maxLockOnDistance and angle <= maxLockOnAngle and not hit then
                shortestDistance = distanceToCrosshair
                closestPlayer = player
            end
        end
    end

    return closestPlayer
end

local function lockOnTargetAndShoot()
    local newTargetPlayer = getClosestPlayerToCrosshair()
    if newTargetPlayer and newTargetPlayer.Character and newTargetPlayer.Character:FindFirstChild("Head") then
        local head = newTargetPlayer.Character.Head
        local targetPosition = head.Position
        Camera.CFrame = CFrame.new(Camera.CFrame.Position, targetPosition)

        if tick() - lastFireTime > fireCooldown then
            shootTowardsTarget(targetPosition)
            lastFireTime = tick()
        end

        print("Locked on target:", newTargetPlayer.Name)
    end
end

local function shootTowardsTarget(targetPosition)
    -- Implement shooting logic here
    print("Shooting towards:", targetPosition)
end

-- Initialization
createMainUI()

-- Update loop
RunService.RenderStepped:Connect(function()
    if aimbotEnabled then
        lockOnTargetAndShoot()
    end

    if espEnabled then
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Team ~= LocalPlayer.Team then
                if not espBoxes[player] then
                    createESP(player)
                end
            else
                removeESP(player)
            end
        end
    end

    if tracerEnabled then
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Team ~= LocalPlayer.Team then
                if not tracers[player] then
                    createTracer(player)
                end
                updateTracer(player)
            else
                removeTracer(player)
            end
        end
    end
end)
